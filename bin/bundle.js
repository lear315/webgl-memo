!function(r){var t={};function e(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return r[o].call(n.exports,n,n.exports,e),n.l=!0,n.exports}e.m=r,e.c=t,e.d=function(r,t,o){e.o(r,t)||Object.defineProperty(r,t,{enumerable:!0,get:o})},e.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},e.t=function(r,t){if(1&t&&(r=e(r)),8&t)return r;if(4&t&&"object"==typeof r&&r&&r.__esModule)return r;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:r}),2&t&&"string"!=typeof r)for(var n in r)e.d(o,n,function(t){return r[t]}.bind(null,n));return o},e.n=function(r){var t=r&&r.__esModule?function(){return r.default}:function(){return r};return e.d(t,"a",t),t},e.o=function(r,t){return Object.prototype.hasOwnProperty.call(r,t)},e.p="",e(e.s=0)}([function(r,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=e(1),n=e(2),i=e(3);new class{constructor(){this.positions=[-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1],this.indices=[0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23],this.faceColors=[1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1],this.normals=[0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0],this.draw()}draw(){let r=document.querySelector("#glcanvas");this.canvas=r;let t=r.getContext("webgl");if(this.gl=t,!t)return void console.log("你的浏览器不支持webgl");let e=t.createProgram();const i=this.loadShader(t,t.VERTEX_SHADER,n.default),a=this.loadShader(t,t.FRAGMENT_SHADER,o.default);t.attachShader(e,i),t.attachShader(e,a),t.linkProgram(e),t.useProgram(e),t.clearColor(0,0,0,1),t.clearDepth(1),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),t.useProgram(e),this.drawScene(t,e)}drawScene(r,t){let e=r.getAttribLocation(t,"a_position");this.worldViewProjectionLoc=r.getUniformLocation(t,"u_worldViewProjection"),this.modelViewMatrixLoc=r.getUniformLocation(t,"uModelViewMatrix"),this.projectionMatrixLoc=r.getUniformLocation(t,"uProjectionMatrix");let o=r.getAttribLocation(t,"aVertexColor"),n=r.getAttribLocation(t,"a_normal"),i=r.getUniformLocation(t,"u_light"),a=new Float32Array([0,-1,0]);r.uniform3fv(i,a);let l=r.getUniformLocation(t,"u_lightColor"),c=new Float32Array([1,1,1]);r.uniform3fv(l,c);let u=r.getUniformLocation(t,"u_eyePos"),s=new Float32Array([.5,0,0]);r.uniform3fv(u,s);let f=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,f),r.bufferData(r.ARRAY_BUFFER,new Float32Array(this.positions),r.STATIC_DRAW),r.vertexAttribPointer(e,3,r.FLOAT,!1,0,0),r.enableVertexAttribArray(e);let d=r.createBuffer();r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,d),r.bufferData(r.ELEMENT_ARRAY_BUFFER,new Uint16Array(this.indices),r.STATIC_DRAW);let g=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,g),r.bufferData(r.ARRAY_BUFFER,new Float32Array(this.faceColors),r.STATIC_DRAW),r.vertexAttribPointer(o,4,r.FLOAT,!1,0,0),r.enableVertexAttribArray(o);let m=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,m),r.bufferData(r.ARRAY_BUFFER,new Float32Array(this.normals),r.STATIC_DRAW),r.vertexAttribPointer(n,3,r.FLOAT,!1,0,0),r.enableVertexAttribArray(n),window.requestAnimationFrame(this.render.bind(this))}render(r){r/=1e3;let t=this.gl;t.clearColor(0,0,0,1),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT);let e=45*Math.PI/180,o=this.canvas.clientWidth/this.canvas.clientHeight,n=i.default.perspective(e,o,.01,500),a=i.default.lookAt([5,0,0],[0,0,0],[0,1,0]),l=i.default.multiplyMatrix(a,n);t.uniformMatrix4fv(this.worldViewProjectionLoc,!1,l);let c=i.default.mat4();c=i.default.rotate(c,r/2,[0,.1,1]),c=i.default.multiplyMatrix(c,a),t.uniformMatrix4fv(this.modelViewMatrixLoc,!1,c),t.uniformMatrix4fv(this.projectionMatrixLoc,!1,n),t.drawElements(t.TRIANGLES,this.indices.length,t.UNSIGNED_SHORT,0),requestAnimationFrame(this.render.bind(this))}loadShader(r,t,e){const o=r.createShader(t);return r.shaderSource(o,e),r.compileShader(o),o}}},function(r,t,e){"use strict";e.r(t),t.default="precision mediump float;\r\nvarying lowp vec4 vColor;\r\nvarying lowp vec3 v_normal;\r\n\r\n//方向光的方向\r\nuniform lowp vec3 u_light;\r\n\r\n//方向观察者的坐标\r\nuniform lowp vec3 u_eyePos;\r\n\r\n//方向光的颜色\r\nuniform lowp vec3 u_lightColor;\r\n\r\nvarying lowp vec3 v_fragpos;\r\n\r\nvoid main() {\r\n    vec3 normal = normalize(v_normal);\r\n   \r\n    gl_FragColor = vColor;\r\n    // 环境光照\r\n    vec3 ambientLight = gl_FragColor.rgb * u_lightColor * 0.1;\r\n\r\n    // 漫反射光照\r\n    float light = max(dot(normal, -u_light), 0.0);\r\n    vec3 diffuseLight = gl_FragColor.rgb * light;\r\n\r\n    // 高光\r\n    float specularStrength = 0.5;\r\n    vec3 eyeDir = normalize(u_eyePos - v_fragpos);\r\n    vec3 reflectDir = reflect(u_light, normal);\r\n    float spec = pow(max(dot(eyeDir, reflectDir), 0.0), 32.0);\r\n    vec3 specular = specularStrength * spec * u_lightColor;\r\n    vec3 specularLight = gl_FragColor.rgb * specular;\r\n\r\n    gl_FragColor.rgb = ambientLight + diffuseLight + specularLight;\r\n}"},function(r,t,e){"use strict";e.r(t),t.default="attribute vec4 a_position;\r\nuniform mat4 u_worldViewProjection;\r\nattribute vec4 aVertexColor;\r\n//法向量的变量\r\nattribute vec3 a_normal;\r\n\r\nuniform mat4 uModelViewMatrix;\r\nuniform mat4 uProjectionMatrix;\r\n\r\n\r\nvarying lowp vec4 vColor;\r\n//将法向量从顶点着色器传递到片元着色器的变量\r\nvarying lowp vec3 v_normal;\r\n\r\nvarying lowp vec3 v_fragpos;\r\n\r\nvoid main() {\r\n    gl_Position = uProjectionMatrix * uModelViewMatrix *  a_position;\r\n    vColor = aVertexColor;\r\n    v_normal = mat3(uModelViewMatrix) * a_normal;\r\n    v_fragpos = vec3(uModelViewMatrix * a_position);\r\n}"},function(r,t,e){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class o{static mat4(){var r=[];return r[0]=1,r[1]=0,r[2]=0,r[3]=0,r[4]=0,r[5]=1,r[6]=0,r[7]=0,r[8]=0,r[9]=0,r[10]=1,r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,r}static subVector(r,t){let e=[],o=r.length;for(let n=0;n<o;++n)e[n]=r[n]-t[n];return e}static dot(r,t){let e=0,o=r.length;for(let n=0;n<o;++n)e+=r[n]*t[n];return e}static cross(r,t){return[r[1]*t[2]-r[2]*t[1],r[2]*t[0]-r[0]*t[2],r[0]*t[1]-r[1]*t[0]]}static normalize(r){let t=[],e=0,o=r.length;for(let t=0;t<o;++t)e+=r[t]*r[t];if(e=Math.sqrt(e),e>1e-5)for(let n=0;n<o;++n)t[n]=r[n]/e;else t=[0,0,0];return t}static transformPoint(r,t){let e=t[0],o=t[1],n=t[2],i=e*r[3]+o*r[7]+n*r[11]+r[15];return[(e*r[0]+o*r[4]+n*r[8]+r[12])/i,(e*r[1]+o*r[5]+n*r[9]+r[13])/i,(e*r[2]+o*r[6]+n*r[10]+r[14])/i]}static identity(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}static rotate(r,t,e){var n=[];n=r.concat([]);var i,a,l,c,u,s,f,d,g,m,h,v,_,p,A,b,w,F,y,M,R,x,L,E,P=e[0],S=e[1],T=e[2],C=Math.sqrt(P*P+S*S+T*T);return Math.abs(C)<o.EPSILON?null:(P*=C=1/C,S*=C,T*=C,i=Math.sin(t),l=1-(a=Math.cos(t)),c=r[0],u=r[1],s=r[2],f=r[3],d=r[4],g=r[5],m=r[6],h=r[7],v=r[8],_=r[9],p=r[10],A=r[11],b=P*P*l+a,w=S*P*l+T*i,F=T*P*l-S*i,y=P*S*l-T*i,M=S*S*l+a,R=T*S*l+P*i,x=P*T*l+S*i,L=S*T*l-P*i,E=T*T*l+a,n[0]=c*b+d*w+v*F,n[1]=u*b+g*w+_*F,n[2]=s*b+m*w+p*F,n[3]=f*b+h*w+A*F,n[4]=c*y+d*M+v*R,n[5]=u*y+g*M+_*R,n[6]=s*y+m*M+p*R,n[7]=f*y+h*M+A*R,n[8]=c*x+d*L+v*E,n[9]=u*x+g*L+_*E,n[10]=s*x+m*L+p*E,n[11]=f*x+h*L+A*E,r!==n&&(n[12]=r[12],n[13]=r[13],n[14]=r[14],n[15]=r[15]),n)}static multiplyMatrix(r,t){let e=r[0],o=r[1],n=r[2],i=r[3],a=r[4],l=r[5],c=r[6],u=r[7],s=r[8],f=r[9],d=r[10],g=r[11],m=r[12],h=r[13],v=r[14],_=r[15],p=t[0],A=t[1],b=t[2],w=t[3],F=t[4],y=t[5],M=t[6],R=t[7],x=t[8],L=t[9],E=t[10],P=t[11],S=t[12],T=t[13],C=t[14],B=t[15];return[e*p+o*F+n*x+i*S,e*A+o*y+n*L+i*T,e*b+o*M+n*E+i*C,e*w+o*R+n*P+i*B,a*p+l*F+c*x+u*S,a*A+l*y+c*L+u*T,a*b+l*M+c*E+u*C,a*w+l*R+c*P+u*B,s*p+f*F+d*x+g*S,s*A+f*y+d*L+g*T,s*b+f*M+d*E+g*C,s*w+f*R+d*P+g*B,m*p+h*F+v*x+_*S,m*A+h*y+v*L+_*T,m*b+h*M+v*E+_*C,m*w+h*R+v*P+_*B]}static inverse(r){let t=r[10]*r[15],e=r[14]*r[11],o=r[6]*r[15],n=r[14]*r[7],i=r[6]*r[11],a=r[10]*r[7],l=r[2]*r[15],c=r[14]*r[3],u=r[2]*r[11],s=r[10]*r[3],f=r[2]*r[7],d=r[6]*r[3],g=r[8]*r[13],m=r[12]*r[9],h=r[4]*r[13],v=r[12]*r[5],_=r[4]*r[9],p=r[8]*r[5],A=r[0]*r[13],b=r[12]*r[1],w=r[0]*r[9],F=r[8]*r[1],y=r[0]*r[5],M=r[4]*r[1],R=t*r[5]+n*r[9]+i*r[13]-(e*r[5]+o*r[9]+a*r[13]),x=e*r[1]+l*r[9]+s*r[13]-(t*r[1]+c*r[9]+u*r[13]),L=o*r[1]+c*r[5]+f*r[13]-(n*r[1]+l*r[5]+d*r[13]),E=a*r[1]+u*r[5]+d*r[9]-(i*r[1]+s*r[5]+f*r[9]),P=1/(r[0]*R+r[4]*x+r[8]*L+r[12]*E);return[P*R,P*x,P*L,P*E,P*(e*r[4]+o*r[8]+a*r[12]-(t*r[4]+n*r[8]+i*r[12])),P*(t*r[0]+c*r[8]+u*r[12]-(e*r[0]+l*r[8]+s*r[12])),P*(n*r[0]+l*r[4]+d*r[12]-(o*r[0]+c*r[4]+f*r[12])),P*(i*r[0]+s*r[4]+f*r[8]-(a*r[0]+u*r[4]+d*r[8])),P*(g*r[7]+v*r[11]+_*r[15]-(m*r[7]+h*r[11]+p*r[15])),P*(m*r[3]+A*r[11]+F*r[15]-(g*r[3]+b*r[11]+w*r[15])),P*(h*r[3]+b*r[7]+y*r[15]-(v*r[3]+A*r[7]+M*r[15])),P*(p*r[3]+w*r[7]+M*r[11]-(_*r[3]+F*r[7]+y*r[11])),P*(h*r[10]+p*r[14]+m*r[6]-(_*r[14]+g*r[6]+v*r[10])),P*(w*r[14]+g*r[2]+b*r[10]-(A*r[10]+F*r[14]+m*r[2])),P*(A*r[6]+M*r[14]+v*r[2]-(y*r[14]+h*r[2]+b*r[6])),P*(y*r[10]+_*r[2]+F*r[6]-(w*r[6]+M*r[10]+p*r[2]))]}static perspective(r,t,e,o){let n=Math.tan(.5*Math.PI-.5*r),i=1/(e-o);return[n/t,0,0,0,0,n,0,0,0,0,(e+o)*i,-1,0,0,e*o*i*2,0]}static cameraLookAt(r,t,e){let n=o.normalize(o.subVector(r,t)),i=o.normalize(o.cross(e,n)),a=o.cross(n,i);return o.inverse([i[0],i[1],i[2],0,a[0],a[1],a[2],0,n[0],n[1],n[2],0,-o.dot(i,r),-o.dot(a,r),-o.dot(n,r),1])}static lookAt(r,t,e){return o.inverse(o.cameraLookAt(r,t,e))}}t.default=o,o.EPSILON=1e-6}]);
//# sourceMappingURL=bundle.js.map