!function(e){var r={};function t(o){if(r[o])return r[o].exports;var n=r[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,t),n.l=!0,n.exports}t.m=e,t.c=r,t.d=function(e,r,o){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:o})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var n in e)t.d(o,n,function(r){return e[r]}.bind(null,n));return o},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=0)}([function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});const o=t(1),n=t(2);new class{constructor(){this.draw()}draw(){let e=document.querySelector("#glcanvas").getContext("webgl");if(!e)return void console.log("你的浏览器不支持webgl");let r=e.createProgram();const t=this.loadShader(e,e.VERTEX_SHADER,n.default),a=this.loadShader(e,e.FRAGMENT_SHADER,o.default);e.attachShader(r,t),e.attachShader(r,a),e.linkProgram(r),e.useProgram(r),e.clearColor(0,0,0,1),e.clearDepth(1),e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.useProgram(r),this.drawScene(e,r)}drawScene(e,r){let t=e.getAttribLocation(r,"aVertexPosition"),o=e.getAttribLocation(r,"aVertexColor"),n=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,n);e.bufferData(e.ARRAY_BUFFER,new Float32Array([1,1,-1,1,1,-1,-1,-1]),e.STATIC_DRAW),e.vertexAttribPointer(t,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(t);let a=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,a),e.bufferData(e.ARRAY_BUFFER,new Float32Array([1,0,0,1,0,1,0,1,0,0,1,1,1,1,1,1]),e.STATIC_DRAW),e.vertexAttribPointer(o,4,e.FLOAT,!1,0,0),e.enableVertexAttribArray(o),e.drawArrays(e.TRIANGLE_STRIP,0,4)}loadShader(e,r,t){const o=e.createShader(r);return e.shaderSource(o,t),e.compileShader(o),o}}},function(e,r,t){"use strict";t.r(r),r.default="varying lowp vec4 vColor;\r\n\r\nvoid main() { \r\n    gl_FragColor = vColor;  // Set the point color\r\n}"},function(e,r,t){"use strict";t.r(r),r.default="attribute vec4 aVertexPosition;\r\nattribute vec4 aVertexColor;\r\n\r\nvarying lowp vec4 vColor;\r\n\r\nvoid main() {\r\n    gl_Position = aVertexPosition; // Set the vertex coordinates of the point\r\n    gl_PointSize = 1.0;                   // Set the point size\r\n    vColor = aVertexColor;\r\n}\r\n"}]);
//# sourceMappingURL=bundle.js.map